<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprDrone</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>horiz = 2;
myTile = 0;

//number represents movement orientation
//12 = fwd, 6 = back, 3 = right, 0 = motionless
stopping = 0; //slowing down
moving = 0; //speeding up or moving steadily

idle = true;
x = path_get_point_x(path2, 0);
y = path_get_point_y(path2, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fwdMax = 3;
horizMax = 3;
tileFwd = myTile+1;
tileBack = myTile-1;

if (keyboard_check(ord('W')) == true and tileFwd &lt;= fwdMax and stopping = 0)
{
 idle = false;
 moving = 12;
 if (mp_linear_step(path_get_point_x(path2, tileFwd), path_get_point_y(path2, tileFwd), 3, 0))
 {
  myTile++;
 }
}

if (keyboard_check_released(ord('W')) == true and tileFwd &lt;= fwdMax and moving != 0)
{
 stopping = 12;
}

if (stopping == 12)
{
 if (mp_linear_step(path_get_point_x(path2, tileFwd), path_get_point_y(path2, tileFwd), 3, 0))
 {
  idle = true;
  moving = 0;
  stopping = 0;
  myTile++;
 }
}
/********************************************************************************************************/
if (keyboard_check(ord('S')) == true and tileBack &gt;= 0 and stopping = 0)
{
 idle = false;
 moving = 6;
 if (mp_linear_step(path_get_point_x(path2, tileBack), path_get_point_y(path2, tileBack), 3, 0))
 {
  myTile--;
 }
}

if (keyboard_check_released(ord('S')) == true and tileBack &gt;= 0 and moving != 0)
{
 stopping = 6;
}

if (stopping == 6)
{
 if (mp_linear_step(path_get_point_x(path2, tileBack), path_get_point_y(path2, tileBack), 3, 0))
 {
  idle = true;
  moving = 0;
  stopping = 0;
  myTile--;
 }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
